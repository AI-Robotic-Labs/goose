"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[1459],{4753:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"contributing","title":"Contributing","description":"We welcome Pull Requests for general contributions! If you have a larger new feature or any questions on how to develop a fix, we recommend you open an issue before starting.","source":"@site/docs/contributing.md","sourceDirName":".","slug":"/contributing","permalink":"/docs/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/contributing.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Quickstart","permalink":"/docs/quickstart"},"next":{"title":"Guides","permalink":"/docs/category/guides"}}');var s=o(4848),r=o(8453);const i={sidebar_position:4},a="Contributing",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Rust",id:"rust",level:3},{value:"Node",id:"node",level:3},{value:"Env Vars",id:"env-vars",level:2},{value:"Enable traces in Goose with locally hosted Langfuse",id:"enable-traces-in-goose-with-locally-hosted-langfuse",level:2},{value:"Conventional Commits",id:"conventional-commits",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,s.jsxs)(n.p,{children:["We welcome Pull Requests for general contributions! If you have a larger new feature or any questions on how to develop a fix, we recommend you open an ",(0,s.jsx)(n.a,{href:"https://github.com/block/goose/issues",children:"issue"})," before starting."]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["Goose includes rust binaries alongside an electron app for the GUI. To work\non the rust backend, you will need to ",(0,s.jsx)(n.a,{href:"https://doc.rust-lang.org/cargo/getting-started/installation.html",children:"install rust and cargo"}),". To work\non the App, you will also need to ",(0,s.jsx)(n.a,{href:"https://github.com/nvm-sh/nvm",children:"install node and npm"})," - we recommend through nvm."]}),"\n",(0,s.jsxs)(n.p,{children:["We provide a shortcut to standard commands using ",(0,s.jsx)(n.a,{href:"https://github.com/casey/just?tab=readme-ov-file#installation",children:"just"})," in our ",(0,s.jsx)(n.code,{children:"justfile"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(n.h3,{id:"rust",children:"Rust"}),"\n",(0,s.jsx)(n.p,{children:"First let's compile goose and try it out"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cargo build\n"})}),"\n",(0,s.jsx)(n.p,{children:"when that is done, you should now have debug builds of the binaries like the goose cli:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"./target/debug/goose --help\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you haven't used the CLI before, you can use this compiled version to do first time configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"./target/debug/goose configure\n"})}),"\n",(0,s.jsx)(n.p,{children:"And then once you have a connection to an LLM provider working, you can run a session!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"./target/debug/goose session\n"})}),"\n",(0,s.jsxs)(n.p,{children:["These same commands can be recompiled and immediately run using ",(0,s.jsx)(n.code,{children:"cargo run -p goose-cli"})," for iteration.\nAs you make changes to the rust code, you can try it out on the CLI, or also run checks and tests:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cargo check  # do your changes compile\ncargo test  # do the tests pass with your changes.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"node",children:"Node"}),"\n",(0,s.jsx)(n.p,{children:"Now let's make sure you can run the app."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"just run-ui\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The start gui will both build a release build of rust (as if you had done ",(0,s.jsx)(n.code,{children:"cargo build -r"}),") and start the electron process.\nYou should see the app open a window, and drop you into first time setup. When you've gone through the setup,\nyou can talk to goose!"]}),"\n",(0,s.jsx)(n.p,{children:"You can now make changes in the code in ui/desktop to iterate on the GUI half of goose."}),"\n",(0,s.jsx)(n.h2,{id:"env-vars",children:"Env Vars"}),"\n",(0,s.jsx)(n.p,{children:"You may want to make more frequent changes to your provider setup or similar to test things out\nas a developer. You can use environment variables to change things on the fly without redoing\nyour configuration."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"[!TIP]\nAt the moment, we are still updating some of the CLI configuration to make sure this is\nrespected."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can change the provider goose points to via the ",(0,s.jsx)(n.code,{children:"GOOSE_PROVIDER"})," env var. If you already\nhave a credential for that provider in your keychain from previously setting up, it should\nreuse it. For things like automations or to test without doing official setup, you can also\nset the relevant env vars for that provider. For example ",(0,s.jsx)(n.code,{children:"ANTHROPIC_API_KEY"}),", ",(0,s.jsx)(n.code,{children:"OPENAI_API_KEY"}),",\nor ",(0,s.jsx)(n.code,{children:"DATABRICKS_HOST"}),". Refer to the provider details for more info on required keys."]}),"\n",(0,s.jsxs)(n.h2,{id:"enable-traces-in-goose-with-locally-hosted-langfuse",children:["Enable traces in Goose with ",(0,s.jsx)(n.a,{href:"https://langfuse.com/docs/deployment/self-host",children:"locally hosted Langfuse"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"just langfuse-server"})," to start your local Langfuse server. It requires Docker."]}),"\n",(0,s.jsxs)(n.li,{children:["Go to ",(0,s.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})," and log in with the default email/password output by the shell script (values can also be found in the ",(0,s.jsx)(n.code,{children:".env.langfuse.local"})," file)."]}),"\n",(0,s.jsx)(n.li,{children:"Set the environment variables so that rust can connect to the langfuse server"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"export LANGFUSE_INIT_PROJECT_PUBLIC_KEY=publickey-local\nexport LANGFUSE_INIT_PROJECT_SECRET_KEY=secretkey-local\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then you can view your traces at ",(0,s.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})]}),"\n",(0,s.jsx)(n.h2,{id:"conventional-commits",children:"Conventional Commits"}),"\n",(0,s.jsxs)(n.p,{children:["This project follows the ",(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"Conventional Commits"})," specification for PR titles. Conventional Commits make it easier to understand the history of a project and facilitate automation around versioning and changelog generation."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);