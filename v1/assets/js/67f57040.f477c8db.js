"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[2656],{9849:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"run_cross_local","title":"Instructions for running cross to test release builds locally","description":"Prerequisites","source":"@site/docs/run_cross_local.md","sourceDirName":".","slug":"/run_cross_local","permalink":"/goose/v1/docs/run_cross_local","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/run_cross_local.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Errors","permalink":"/goose/v1/docs/errors"},"next":{"title":"Systems Design Guide","permalink":"/goose/v1/docs/systems"}}');var r=i(4848),l=i(8453);const a={},t="Instructions for running cross to test release builds locally",c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Targets",id:"targets",level:2},{value:"aarch64-unknown-linux-gnu",id:"aarch64-unknown-linux-gnu",level:3},{value:"Build release",id:"build-release",level:4},{value:"Inspect container created by cross for debugging",id:"inspect-container-created-by-cross-for-debugging",level:4},{value:"Testing the binary",id:"testing-the-binary",level:4},{value:"x86_64-unknown-linux-gnu",id:"x86_64-unknown-linux-gnu",level:3},{value:"Build release",id:"build-release-1",level:4},{value:"inspect container created by cross for debugging",id:"inspect-container-created-by-cross-for-debugging-1",level:4},{value:"Testing the binary",id:"testing-the-binary-1",level:4},{value:"aarch64-apple-darwin",id:"aarch64-apple-darwin",level:3},{value:"build release",id:"build-release-2",level:4},{value:"testing the build",id:"testing-the-build",level:4},{value:"x86_64-apple-darwin",id:"x86_64-apple-darwin",level:3},{value:"build release",id:"build-release-3",level:4},{value:"testing the build",id:"testing-the-build-1",level:4}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"instructions-for-running-cross-to-test-release-builds-locally",children:"Instructions for running cross to test release builds locally"})}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.p,{children:["Before start, check the comments in ",(0,r.jsx)(n.code,{children:"Cross.toml"})," to turn on some commented configs for the target you want to build."]}),"\n",(0,r.jsx)(n.h2,{id:"targets",children:"Targets"}),"\n",(0,r.jsx)(n.h3,{id:"aarch64-unknown-linux-gnu",children:"aarch64-unknown-linux-gnu"}),"\n",(0,r.jsx)(n.h4,{id:"build-release",children:"Build release"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'CROSS_BUILD_OPTS="--platform linux/amd64 --no-cache" CROSS_CONTAINER_OPTS="--platform linux/amd64" cross build --release --target aarch64-unknown-linux-gnu\n'})}),"\n",(0,r.jsx)(n.h4,{id:"inspect-container-created-by-cross-for-debugging",children:"Inspect container created by cross for debugging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --platform linux/amd64 -it <image-id> /bin/bash\n"})}),"\n",(0,r.jsx)(n.h4,{id:"testing-the-binary",children:"Testing the binary"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Download docker image for testing environment"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --rm --privileged multiarch/qemu-user-static --reset -p yes\ndocker pull arm64v8/ubuntu\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Run the container\npwd is the directory contains the binary built in the previous step on your host machine"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run -v $(pwd):/app -it arm64v8/ubuntu /bin/bash\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Install dependencies in the container and set up api testing environment"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"apt update\napt install libxcb1 libxcb1-dev libdbus-1-3 nvi\nmkdir -p ~/.config/goose\n# create goose config file\n# set api key env variable\n"})}),"\n",(0,r.jsx)(n.h3,{id:"x86_64-unknown-linux-gnu",children:"x86_64-unknown-linux-gnu"}),"\n",(0,r.jsx)(n.h4,{id:"build-release-1",children:"Build release"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'CROSS_BUILD_OPTS="--platform linux/amd64 --no-cache" CROSS_CONTAINER_OPTS="--platform linux/amd64" cross build --release --target x86_64-unknown-linux-gnu\n'})}),"\n",(0,r.jsx)(n.h4,{id:"inspect-container-created-by-cross-for-debugging-1",children:"inspect container created by cross for debugging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --platform linux/amd64 -it <image-id> /bin/bash\n"})}),"\n",(0,r.jsx)(n.h4,{id:"testing-the-binary-1",children:"Testing the binary"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Download docker image for testing environment"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --rm --privileged multiarch/qemu-user-static --reset -p yes\ndocker pull --platform linux/amd64 debian:latest\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Run the container\npwd is the directory contains the binary built in the previous step on your host machine"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'docker run --platform linux/amd64 -it -v "$(pwd)":/app debian:latest /bin/bash\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Install dependencies in the container and set up api testing environment"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"apt update\napt install libxcb1 libxcb1-dev libdbus-1-3 nvi\nmkdir -p ~/.config/goose\n# create goose config file\n# set api key env variable\n"})}),"\n",(0,r.jsx)(n.h3,{id:"aarch64-apple-darwin",children:"aarch64-apple-darwin"}),"\n",(0,r.jsx)(n.h4,{id:"build-release-2",children:"build release"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"cross build --release --target aarch64-apple-darwin\n"})}),"\n",(0,r.jsx)(n.p,{children:"There is no docker image available for aarch64-apple-darwin. It will fall back to your host machine for building the binary if your host machine matches."}),"\n",(0,r.jsx)(n.h4,{id:"testing-the-build",children:"testing the build"}),"\n",(0,r.jsx)(n.p,{children:"If the binary is signed with a certificate, run"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"xattr -d com.apple.quarantine goose\n"})}),"\n",(0,r.jsx)(n.h3,{id:"x86_64-apple-darwin",children:"x86_64-apple-darwin"}),"\n",(0,r.jsx)(n.h4,{id:"build-release-3",children:"build release"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"cross build --release --target x86_64-apple-darwin\n"})}),"\n",(0,r.jsx)(n.p,{children:"There is no docker image available for x86_64-apple-darwin. It will fall back to your host machine for building the binary if your host machine matches."}),"\n",(0,r.jsx)(n.h4,{id:"testing-the-build-1",children:"testing the build"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"If the binary is signed with a certificate, run"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"xattr -d com.apple.quarantine goose\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"If you are on Apple Silicon (ARM), you can use Rosetta to test the binary"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"softwareupdate --install-rosetta # make sure Rosetta 2 is installed\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"arch -x86_64 ./goose help\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(6540);const r={},l=s.createContext(r);function a(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);