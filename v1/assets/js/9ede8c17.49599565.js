"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[3023],{1837:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"configuration/managing-extensions","title":"Managing Goose Extensions","description":"Goose Extensions are add-ons that provide are a way to extend the functionality of Goose. They also provide a way to connect Goose with applications and tools you already use in your workflow. These extensions can be used to add new features, automate tasks, or integrate with other systems. Extensions are based on the Model Context Protocol (MCP) so you can connect","source":"@site/docs/configuration/managing-extensions.md","sourceDirName":"configuration","slug":"/configuration/managing-extensions","permalink":"/goose/v1/docs/configuration/managing-extensions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Managing Goose Extensions"},"sidebar":"tutorialSidebar","previous":{"title":"Supported LLM Providers","permalink":"/goose/v1/docs/configuration/providers"},"next":{"title":"Architecture Overview","permalink":"/goose/v1/docs/category/architecture-overview"}}');var s=t(4848),r=t(8453);t(5537),t(9329);const i={sidebar_position:2,title:"Managing Goose Extensions"},a=void 0,l={},c=[{value:"Managing Extensions in Goose",id:"managing-extensions-in-goose",level:2},{value:"Built-in Extensions",id:"built-in-extensions",level:3},{value:"MCP Servers",id:"mcp-servers",level:3},{value:"Discovering Extensions",id:"discovering-extensions",level:3},{value:"Starting a Goose Session with Extensions",id:"starting-a-goose-session-with-extensions",level:2},{value:"Developing Extensions",id:"developing-extensions",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Goose Extensions are add-ons that provide are a way to extend the functionality of Goose. They also provide a way to connect Goose with applications and tools you already use in your workflow. These extensions can be used to add new features, automate tasks, or integrate with other systems. Extensions are based on the ",(0,s.jsx)(n.a,{href:"https://github.com/modelcontextprotocol",children:"Model Context Protocol (MCP)"})," so you can connect\ngoose to a wide ecosystem of capabilities."]}),"\n",(0,s.jsx)(n.h2,{id:"managing-extensions-in-goose",children:"Managing Extensions in Goose"}),"\n",(0,s.jsx)(n.p,{children:"You can add extensions to goose through its configuration system."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"goose configure\n"})}),"\n",(0,s.jsxs)(n.p,{children:['After the first time setup, configure will let you choose to add extensions. Head to "Add Extension" to see your\noptions. You can also always edit the config file directly, which is stored in ',(0,s.jsx)(n.code,{children:"~/.config/goose/config.yaml"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"built-in-extensions",children:"Built-in Extensions"}),"\n",(0,s.jsx)(n.p,{children:"Goose starts out of the box with it's Developer extension enabled, giving it a shell to run commands and a way to edit files\non your filesystem."}),"\n",(0,s.jsxs)(n.p,{children:["Goose has some other builtin extensions. Run ",(0,s.jsx)(n.code,{children:"goose configure"}),' and head to "Add Extension" > "Built-in Extension" to see the options.']}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"All of the goose builtin extensions are MCP servers in their own right. If you'd like\nto use the MCP servers included with goose with any other agent, you are free to do so!\nYou can run them with"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"goose mcp {name}\n"})})]}),"\n",(0,s.jsx)(n.h3,{id:"mcp-servers",children:"MCP Servers"}),"\n",(0,s.jsxs)(n.p,{children:["You can run any MCP server as a goose extension. Head to ",(0,s.jsx)(n.code,{children:"goose configure"}),' > "Add Extension" > "Command-line Extension".\nThat will let you enter a command and any environment variables needed. For example, to connect to the ',(0,s.jsx)(n.a,{href:"https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",children:"Fetch Server"}),", enter ",(0,s.jsx)(n.code,{children:"uvx mcp-server-fetch"})," as the command."]}),"\n",(0,s.jsx)(n.p,{children:"You can also edit the resulting config entry directly, which should look like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"extensions:\n  fetch:\n    name: fetch\n    cmd: uvx\n    args: [mcp-server-fetch]\n    enabled: true\n    envs: {}\n    type: stdio\n"})}),"\n",(0,s.jsx)(n.h3,{id:"discovering-extensions",children:"Discovering Extensions"}),"\n",(0,s.jsxs)(n.p,{children:["Goose comes with a ",(0,s.jsx)(n.a,{href:"https://silver-disco-nvm6v4e.pages.github.io/",children:"central directory"})," of extensions that you can install and use. You can install extensions from the Goose CLI or from the Goose GUI. The page will give you a test command to try out extensions, and then\nif you want to keep them, you can add through ",(0,s.jsx)(n.code,{children:"goose configure"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"You can test out an extension for a single session with"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'goose session --with-extension "command to run"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"starting-a-goose-session-with-extensions",children:"Starting a Goose Session with Extensions"}),"\n",(0,s.jsx)(n.p,{children:"You can start a tailored goose session with specific extensions directly from the CLI. To do this, run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'goose session --with-extension "{extension command}"\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"You may need to set necessary environment variables for the extension to work correctly."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'goose session --with-extension "VAR=value command arg1 arg2"\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"developing-extensions",children:"Developing Extensions"}),"\n",(0,s.jsxs)(n.p,{children:["Goose extensions are implemented with the Model Context Protocol (MCP) - a system that allows AI models and agents to securely connect with local or remote resources using standard protocols. Learn how to build your own ",(0,s.jsx)(n.a,{href:"https://modelcontextprotocol.io/quickstart/server",children:"extension as an MCP server"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var o=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,o.A)(s.tabItem,i),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>j});var o=t(6540),s=t(4164),r=t(5627),i=t(6347),a=t(372),l=t(604),c=t(1861),u=t(8749);function d(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:s}}=e;return{value:n,label:t,attributes:o,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=h(e),[i,l]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:r}))),[c,d]=g({queryString:t,groupId:s}),[m,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,u.Dv)(t);return[s,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),f=(()=>{const e=c??m;return p({value:e,tabValues:r})?e:null})();(0,a.A)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),x(e)}),[d,x,r]),tabValues:r}}var x=t(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function b(e){let{className:n,block:t,selectedValue:o,selectValue:i,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),s=a[t].value;s!==o&&(c(n),i(s))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>{l.push(e)},onKeyDown:d,onClick:u,...r,className:(0,s.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function w(e){const n=m(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,v.jsx)(b,{...n,...e}),(0,v.jsx)(y,{...n,...e})]})}function j(e){const n=(0,x.A)();return(0,v.jsx)(w,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);