"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[9076],{4515:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"guidance/goose-in-action","title":"Goose in action","description":"This page is frequently updated with the latest use-cases and applications of Goose!","source":"@site/docs/guidance/goose-in-action.md","sourceDirName":"guidance","slug":"/guidance/goose-in-action","permalink":"/goose/v1/docs/guidance/goose-in-action","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guidance/goose-in-action.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Applications of Goose","permalink":"/goose/v1/docs/guidance/applications"},"next":{"title":"Handling LLM Rate Limits with Goose","permalink":"/goose/v1/docs/guidance/handling-llm-rate-limits-with-goose"}}');var i=s(4848),n=s(8453);const a={},c="Goose in action",r={},l=[{value:"Goose as a Github Action",id:"goose-as-a-github-action",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"goose-in-action",children:"Goose in action"})}),"\n",(0,i.jsx)(t.p,{children:"This page is frequently updated with the latest use-cases and applications of Goose!"}),"\n",(0,i.jsx)(t.h2,{id:"goose-as-a-github-action",children:"Goose as a Github Action"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"What it does"}),":"]}),"\n",(0,i.jsx)(t.p,{children:"An early version of a GitHub action that uses Goose to automatically address issues in your repository. It operates in the background to attempt fixes or enhancements based on issue descriptions."}),"\n",(0,i.jsx)(t.p,{children:"The action attempts to fix issues described in GitHub. It takes the issue's title and body as input and tries to resolve the issue programmatically."}),"\n",(0,i.jsx)(t.p,{children:"If the action successfully fixes the issue, it will automatically create a pull request with the fix. If it cannot confidently fix the issue, no pull request is created."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Where you can find it"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/marketplace/actions/goose-ai-developer-agent",children:"https://github.com/marketplace/actions/goose-ai-developer-agent"})]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"How you can do something similar"}),":"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Decide what specific task you want Goose to automate. This could be anything from auto-linting code, updating dependencies, auto-merging approved pull requests, or even automating responses to issue comments."}),"\n",(0,i.jsxs)(t.li,{children:["In the ",(0,i.jsx)(t.code,{children:"action.yml"}),", specify any inputs your action needs (like GitHub tokens, configuration files, specific command inputs) and outputs it may produce."]}),"\n",(0,i.jsx)(t.li,{children:"Write the script (e.g., Python or JavaScript) that Goose will use to perform the tasks. This involves setting up the Goose environment, handling GitHub API requests, and processing the task-specific logic."}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var o=s(6540);const i={},n=o.createContext(i);function a(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);