on:
  push:
    tags:
      - "v00.*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

name: Release CLI

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        architecture: [x86_64, aarch64]
        include:
          # Build on Ubuntu only for x86_64
          - os: ubuntu-latest
            architecture: x86_64
            suffix: unknown-linux-gnu
          # Cross-compile on macOS for aarch64
          - os: macos-latest
            architecture: aarch64
            suffix: unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.architecture }}-${{ matrix.suffix }}

      # Install dependencies and set up for macOS cross-compilation
      - name: Install dependencies (macOS only)
        if: matrix.os == 'macos-latest' && matrix.architecture == 'aarch64'
        run: |
          brew install llvm
          rustup target add aarch64-unknown-linux-gnu
          echo "export PATH=$(brew --prefix llvm)/bin:\$PATH" >> $GITHUB_ENV

      - name: Build
        run: |
          export TARGET=${{ matrix.architecture }}-${{ matrix.suffix }}
          if [ "${{ matrix.os }}" == "macos-latest" ] && [ "${{ matrix.architecture }}" == "aarch64" ]; then
            CC=aarch64-linux-gnu-gcc \
            CXX=aarch64-linux-gnu-g++ \
            cargo build --release --target $TARGET
          else
            cargo build --release --target $TARGET
          fi
          cd target/${TARGET}/release
          tar -cjf goose-${TARGET}.tar.bz2 goose goosed
          echo "goose-${TARGET}.tar.bz2" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: goose-${{ matrix.architecture }}-${{ matrix.suffix }}
          path: target/${{ matrix.architecture }}-${{ matrix.suffix }}/release/goose-*.tar.bz2

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "goose-*.bz2"
          token: ${{ secrets.GITHUB_TOKEN }}
